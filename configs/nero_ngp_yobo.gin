include 'ngp_yobo.gin'

Config.dataset_loader = 'glossy_synthetic'
Config.num_dataset_images = -1
Config.factor = 0

Config.meshfile = ""
Config.use_mesh_face_normals = True

Config.use_exrs = False
Config.linear_to_srgb = False

Config.compute_albedo_metrics = False
Config.compute_normal_metrics = False

# Sampling and contraction
Config.near = 1.0
Config.far = 4.0
Config.secondary_far = 1.0

DensityMLP.backfacing_near = 1e-1
MaterialMLP.near_max = 5e-2
MaterialMLP.near_min = 5e-2
MaterialMLP.near_rate = 0.1
Config.surface_light_field_loss_near = 5e-2

# NeRFMLP.surface_lf_distance_near = 1.0
NeRFMLP.surface_lf_distance_near = 5e-2
NeRFMLP.surface_lf_distance_far = 20.0

Config.env_map_distance = 1.0
NeRFModel.env_map_near = 1.0
NeRFModel.env_map_far = 1.0

DensityMLP.warp_fn = @coord.contract_radius_2
NeRFMLP.warp_fn = @coord.contract_radius_2
SurfaceLightFieldMLP.warp_fn = @coord.contract_radius_2
SurfaceLightFieldMLP.ref_warp_fn = @coord.contract_radius_2
LightMLP.warp_fn = @coord.contract_radius_2
MaterialMLP.warp_fn = @coord.contract_radius_2
HashEncoding.bbox_scaling = 2.0

# Regularizers
Config.param_regularizers = {
    'material_grid': (1.0, @jnp.mean, 2, 1),
}
Config.param_regularizers = {
    'density_grid': (0.1, @jnp.mean, 2, 1),
    'light_grid': (0.1, @jnp.mean, 2, 1),
}
Config.material_ray_sampler_interlevel_loss_mult = 0.0
Config.material_ray_sampler_normal_loss_mult = 0.0
Config.no_material_regularizers = True

# Normal losses
DensityMLP.disable_density_normals = True
DensityMLP.enable_pred_normals = True
Config.predicted_normal_loss_stopgrad = False
Config.predicted_normal_loss_stopgrad_weight = 0.0

Config.interlevel_loss_mults = (0.01, 0.01)
Config.material_interlevel_loss_mults = (0.0, 0.0)
Config.interlevel_loss_blurs = (0.03, 0.003)

Config.distortion_loss_mult = 0.0

Config.orientation_loss_mult = 0.0
Config.orientation_loss_target = 'normals_pred'

Config.predicted_normal_loss_mult = 0.1
Config.predicted_normal_reverse_loss_mult = 0.1
Config.material_predicted_normal_loss_mult = 1.0

Config.use_normal_weight_ease = True
Config.use_normal_weight_ease_backward = True

Config.normal_weight_ease_frac = 0.2
Config.normal_weight_ease_start = 0.2
Config.normal_weight_ease_min = 0.001

NeRFMLP.stopgrad_normals_weight = 1.0

MaterialMLP.normals_target = 'normals_to_use'
Config.material_normals_target = 'normals_to_use'
LightMLP.normals_target = 'normals_to_use'
NeRFMLP.normals_target = 'normals_to_use'

Config.use_geometry_smoothness = True
Config.geometry_smoothness_noise = 0.1
Config.geometry_smoothness_weight_normals = 0.5
Config.geometry_smoothness_weight_normals_pred = 0.0
Config.geometry_smoothness_weight_density = 0.0

Config.use_geometry_weight_decay = True
Config.geometry_weight_decay_frac = 0.1
Config.geometry_weight_decay_start = 0.0
Config.geometry_weight_decay_min = 0.0

# Secondary ray casting
MaterialModel.slf_variate = True

# Sampling
NeRFModel.use_raydist_for_secondary_only = False

# Surface light field
NeRFMLP.surface_lf_params = {
    'net_depth': 2,
    'net_width': 64,
    'skip_layer': 2,
    'bottleneck_width': 128,

    'use_directional_enc': False,
    'use_ide': False,
    'deg_view': 2,

    'net_depth_viewdirs': 2,
    'net_width_viewdirs': 64,
    'skip_layer_dir': 2,

    'use_distance_prediction': True,
    'use_distance_ide': False,
    'deg_view_distance': 2,
    'net_depth_distance': 4,
    'net_width_distance': 128,
    'skip_layer_distance': 2,

    'use_origins': False,
    'deg_origins': 4,

    'num_distance_samples': 8,
    # 'num_far_samples': 4,
    'distance_scale': 1.0,

    'use_uniform_distance': False,
    'use_uniform_loss': False,

    'use_voxel_grid': False,
    'use_uniform_grid': True,
    'voxel_start': 0.0,
    'voxel_end': 10.0,
    
    'use_point_offsets': False,
    'point_offset_scale': 0.25,
    'point_offset_bias': -3.0,

    'use_far_field_points': False,
    'use_points': False,
    'use_points_ide': True,
    'deg_points': 5,

    'use_reflectance_grid': True,
    'reflectance_grid_representation': 'ngp',
    'reflectance_grid_params': {
        'hash_map_size': 524288,
        'max_grid_size': 64,
        'num_features': 4,
        'bbox_scaling': 2.0,
    },
    'per_ref_feature_output': False,

    'use_grid': False,
    'grid_representation': 'ngp',
    'grid_params': {
        'hash_map_size': 524288,
        'max_grid_size': 256,
        'num_features': 4,
    },
    'use_roughness': False,

    'use_bottleneck': False,
    'use_density_feature': False,
    'use_shader_bottleneck': True,
}

NeRFModel.env_map_params = {
    'net_depth': 2,
    'net_width': 64,
    'skip_layer': 2,
    'bottleneck_width': 128,

    'use_directional_enc': False,
    'use_ide': False,
    'deg_view': 2,

    'net_depth_viewdirs': 2,
    'net_width_viewdirs': 64,
    'skip_layer_dir': 2,

    'use_distance_prediction': False,
    'use_origins': False,
    'deg_origins': 4,

    'num_distance_samples': 1,
    'distance_scale': 1.0,
    
    'use_point_offsets': False,
    'point_offset_scale': 0.25,
    'point_offset_bias': -3.0,

    'use_far_field_points': True,
    'use_points': False,
    'use_points_ide': True,
    'deg_points': 5,

    'use_reflectance_grid': True,
    'reflectance_grid_representation': 'ngp',
    'reflectance_grid_params': {
        'hash_map_size': 524288,
        'max_grid_size': 64,
        'num_features': 4,
        'bbox_scaling': 2.0,
    },
    'per_ref_feature_output': False,

    'use_grid': False,
    'use_roughness': False,

    'use_bottleneck': False,
    'use_density_feature': False,
    'use_shader_bottleneck': False,
    
    'multiple_illumination_outputs': True,
    'rotate_illumination': True,
}

Config.num_illuminations = 3
Config.use_ground_truth_illumination = False
EnvironmentSampler.samples_to_take = 256
Config.light_rotations = [0.0, 120.0, 240.0]

NeRFMLP.num_light_features = 64
MaterialMLP.num_light_features = 64
LightMLP.num_light_features = 64
SurfaceLightFieldMLP.num_light_features = 64

NeRFMLP.use_illumination_feature = False
MaterialMLP.use_illumination_feature = False
LightMLP.use_illumination_feature = False
SurfaceLightFieldMLP.use_illumination_feature = False

NeRFMLP.multiple_illumination_outputs = True
MaterialMLP.multiple_illumination_outputs = True
LightMLP.multiple_illumination_outputs = True
SurfaceLightFieldMLP.multiple_illumination_outputs = True

# Integrator
VolumeIntegrator.bg_intensity_range = (1, 1)
Config.opaque_loss_weight = 10.0
Config.empty_loss_weight = 10.0
Config.mask_lossmult = False
Config.mask_lossmult_weight = 0.0
Config.evaluate_without_masks = False
Config.clip_eval = True
Config.correct_eval = True
DensityMLP.density_bias = -1.0

Config.use_mask_weight_decay = False
Config.mask_weight_decay_frac = 0.0
Config.mask_weight_decay_start = 0.0
Config.mask_weight_decay_min = 0.0

# Other
MaterialMLP.use_irradiance_cache = True

MaterialMLP.irradiance_cache_weight = 0.0
MaterialMLP.irradiance_cache_decay_rate = 0.25

Config.irradiance_cache_loss_weight = 1.0
Config.irradiance_cache_color_loss_weight = 0.0
Config.whitening_loss_weight = 0.0

Config.irradiance_cache_stopgrad_weight = 0.0
Config.irradiance_cache_stopgrad_weight_backwards = 1.0

Config.material_correlation_weight_albedo = 0.0
Config.material_correlation_weight_other = 0.0

# Smoothness
Config.material_smoothness_l1_loss = False
Config.material_smoothness_tensoir_albedo = False
Config.material_smoothness_noise = 0.01
Config.material_smoothness_weight_albedo = 0.01
Config.material_smoothness_weight_other = 0.01

Config.material_smoothness_base = 0.0
Config.material_smoothness_irradiance_multiplier = 4.0
Config.material_smoothness_irradiance_weight = False

# Stopgrads
MaterialMLP.stopgrad_shading_weight = 1e-2
NeRFModel.stopgrad_cache_weight = (1e2, 1e-4)
NeRFModel.stopgrad_slf_weight = (1e2, 1e-4)
NeRFModel.stopgrad_env_map_weight = (1e-1, 1)

# Extra ray / consistency losses
MaterialModel.loss = 'rawnerf_transient_unbiased'
MaterialModel.loss_weight = 0.1

MaterialModel.cache_loss = 'charb'
MaterialModel.cache_linear_to_srgb = True

Config.cache_consistency_loss_type = 'rawnerf_transient_unbiased'
Config.cache_consistency_loss_weight = 0.1

Config.rawnerf_exponent = 1
Config.rawnerf_exponent_material = 1

Config.rawnerf_eps = 1e-2
Config.rawnerf_eps_material = 1e-2

Config.lr_factor = 1.0

NeRFModel.resample = False
NeRFModel.resample_secondary = True
NeRFModel.resample_render = False

Config.cache_consistency_loss_mode = 'shader'
Config.cache_consistency_use_integrated = True
Config.cache_consistency_loss_weight = 0.1
Config.cache_consistency_stopgrad_weight_cache = 1.0

Config.volume_variate = False
Config.volume_variate_material = False
Config.volume_variate_secondary = False
Config.volume_variate_passes = []
Config.volume_variate_passes_secondary = []

Config.extra_ray_regularizer = False
Config.extra_ray_light_shuffle = True
Config.extra_ray_type = 'incoming'

# Loss radius
Config.surface_light_field_importance_sample_weights = False
Config.surface_light_field_loss_radius = 1.0
Config.surface_light_field_stopgrad_weight_forward = 0.0
Config.material_loss_radius = 1.0
Config.emission_radius = 1.0

NeRFMLP.rgb_max = 10000.0
MaterialMLP.rgb_max = 10000.0

# RGB Activation
MaterialModel.share_material = False
MaterialModel.share_light_power = True

NeRFMLP.optimize_light = False
MaterialMLP.optimize_light = False

NeRFMLP.light_power_activation = @math.abs
MaterialMLP.light_power_activation = @math.abs

NeRFMLP.irradiance_activation = @jax.nn.softplus
NeRFMLP.irradiance_bias = -2.0

NeRFMLP.ambient_irradiance_activation = @jax.nn.softplus
NeRFMLP.ambient_irradiance_bias = -2.0

NeRFMLP.albedo_activation = @jax.nn.sigmoid
NeRFMLP.albedo_bias = -1.0

NeRFMLP.rgb_activation = @jax.nn.softplus
NeRFMLP.rgb_bias_diffuse = -1.0

SurfaceLightFieldMLP.use_lights = False

SurfaceLightFieldMLP.rgb_activation = @jax.nn.softplus
SurfaceLightFieldMLP.rgb_bias = -2.0

SurfaceLightFieldMLP.ambient_rgb_activation = @jax.nn.softplus
SurfaceLightFieldMLP.ambient_rgb_bias = -1.0

MaterialMLP.use_active = False
NeRFMLP.use_ambient = True
NeRFMLP.use_indirect = False
NeRFMLP.use_active = False

Config.stopgrad_cache_geometry = True
Config.stopgrad_cache_geometry_weight = 1.0
Config.stopgrad_cache_geometry_feature_weight = 1.0
Config.stopgrad_cache_geometry_normals_weight = 1.0